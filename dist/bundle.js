(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,"body{\n    max-width:100vw;\n    display: flex;\n}\n#content{\n    display: flex; \n    flex-direction: column; \n    align-self: center; \n    height: 100vh; \n    width: 75vw; \n   \n}\n.textbox{\n    border: blue;\n    white-space: pre;\n}\n.content{\n    flex:1; \n    justify-content: space-evenly;\n    display:flex;\n}\n.page{\n    display: flex;\n    flex-direction: column;\n    flex:1;\n    background-color: rgba(0, 0, 255, 0.397);\n}\n#headerMenu {\n    display:flex;\n    height: 4rem;         \n    justify-content: right; \n}\n.headerItem{\n    flex: 0 1 30rem;\n    max-width: 10rem;  \n    height: 4rem;         \n    background-color: rgba(0, 0, 255, 0.397);\n    border-style: ridge;\n    border-top-left-radius: 25%;\n}\n#header1, #header2, #header3{\n    border: hidden; \n    border-left:ridge; \n    border-right: ridge; \n}\n\n#header2, #header3{\n    border-bottom: ridge; \n}\n#header3 {\n    border-right: hidden;  \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,aAAa;AACjB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,aAAa;IACb,WAAW;;AAEf;AACA;IACI,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI,MAAM;IACN,6BAA6B;IAC7B,YAAY;AAChB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,MAAM;IACN,wCAAwC;AAC5C;AACA;IACI,YAAY;IACZ,YAAY;IACZ,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,gBAAgB;IAChB,YAAY;IACZ,wCAAwC;IACxC,mBAAmB;IACnB,2BAA2B;AAC/B;AACA;IACI,cAAc;IACd,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;AACxB;AACA;IACI,oBAAoB;AACxB",sourcesContent:["body{\n    max-width:100vw;\n    display: flex;\n}\n#content{\n    display: flex; \n    flex-direction: column; \n    align-self: center; \n    height: 100vh; \n    width: 75vw; \n   \n}\n.textbox{\n    border: blue;\n    white-space: pre;\n}\n.content{\n    flex:1; \n    justify-content: space-evenly;\n    display:flex;\n}\n.page{\n    display: flex;\n    flex-direction: column;\n    flex:1;\n    background-color: rgba(0, 0, 255, 0.397);\n}\n#headerMenu {\n    display:flex;\n    height: 4rem;         \n    justify-content: right; \n}\n.headerItem{\n    flex: 0 1 30rem;\n    max-width: 10rem;  \n    height: 4rem;         \n    background-color: rgba(0, 0, 255, 0.397);\n    border-style: ridge;\n    border-top-left-radius: 25%;\n}\n#header1, #header2, #header3{\n    border: hidden; \n    border-left:ridge; \n    border-right: ridge; \n}\n\n#header2, #header3{\n    border-bottom: ridge; \n}\n#header3 {\n    border-right: hidden;  \n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),c=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(c).concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var d=e[i],s=r.base?d[0]+r.base:d[0],l=a[s]||0,p="".concat(s," ").concat(l);a[s]=l+1;var A=n(p),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)t[A].references++,t[A].updater(u);else{var h=o(u,r);r.byIndex=i,t.splice(i,0,{identifier:p,updater:h,references:1})}c.push(p)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=n(a[c]);t[i].references--}for(var d=r(e,o),s=0;s<a.length;s++){var l=n(a[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=d}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},141:(e,t,n)=>{e.exports=n.p+"c00145874096f2cade66.jpeg"},796:(e,t,n)=>{e.exports=n.p+"899c7d3bdcbddefea7b9.jpg"},571:(e,t,n)=>{e.exports=n.p+"f6a14ee5ac76846318df.jpeg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),i=n(565),d=n.n(i),s=n(216),l=n.n(s),p=n(589),A=n.n(p),u=n(426),h={};h.styleTagTransform=A(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),t()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;var f=n(571);n(141),n(796);const m=(e=>{const t=(e,t,n)=>{let r=document.createElement(e);return r.className=t,r.id=n,r};return{createNewElement:t,createHeaderMenu:e=>{const n=t("div","headerMenu","headerMenu");return e.forEach(((e,r)=>{r=t("div","headerItem",e),n.appendChild(r)})),n},clearPage:()=>{document.querySelector(".page").remove(),console.log("page removed")}}})(),g=document.querySelector("div"),C=m.createHeaderMenu(["header1","header2","header3"]);g.appendChild(C);const b=()=>{const e=m.createNewElement("div","page"),t=m.createNewElement("div","content","pageContent1"),n=m.createNewElement("div","content","pageContent2"),r=m.createNewElement("div","content","pageContent3"),o=m.createNewElement("div","textbox","p1c1textbox");o.textContent="here is some text content for this box";const a=m.createNewElement("img","imgHolder","p1c1ImgHolder");a.src=f;const c=m.createNewElement("div","textbox","p1c2textbox"),i=m.createNewElement("div","textbox","p1c3textbox");i.textContent="contact information:";const d=document.createElement("iframe");d.setAttribute("src","https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d63833.231980735676!2d73.14289741361111!3d-0.6301752026039324!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x24b599bfaafb7bbd%3A0x414509e181956289!2sMaldives!5e0!3m2!1sen!2sus!4v1639096087116!5m2!1sen!2sus"),d.setAttribute("width",400),d.setAttribute("height",300),d.setAttribute("loading","lazy"),d.setAttribute("style","border:0"),t.appendChild(o),t.appendChild(a),n.appendChild(c),r.appendChild(i),r.appendChild(d),e.appendChild(t),e.appendChild(n),e.appendChild(r),g.appendChild(e)};b();const v=document.querySelectorAll(".headerItem");v.forEach(((e,t)=>{let n=document.getElementById(e.id);n.addEventListener("click",(()=>{switch(v.forEach((e=>{document.getElementById(e.id).style.borderBottom="ridge"})),n.style.borderBottom="hidden",m.clearPage(),t){case 0:b(),console.log("loadpage 1");break;case 1:(()=>{const e=m.createNewElement("div","page"),t=m.createNewElement("div","content","pageContent1"),n=m.createNewElement("div","content","pageContent2"),r=m.createNewElement("div","content","pageContent3");e.appendChild(t),e.appendChild(n),e.appendChild(r),g.appendChild(e)})(),console.log("loadPageTwo()");break;case 2:(()=>{const e=m.createNewElement("div","page"),t=m.createNewElement("div","content","pageContent1"),n=m.createNewElement("div","content","pageContent2"),r=m.createNewElement("div","content","pageContent3");e.appendChild(t),e.appendChild(n),e.appendChild(r),g.appendChild(e)})(),console.log("loadPageThree()")}console.log("click")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,